public class mergesort {
        static void merge(int[] a, int l, int m, int r) {
            int[] left = java.util.Arrays.copyOfRange(a, l, m + 1);
            int[] right = java.util.Arrays.copyOfRange(a, m + 1, r + 1);
            int i = 0, j = 0, k = l;
            while (i < left.length && j < right.length)
                a[k++] = (left[i] <= right[j]) ? left[i++] : right[j++];
            while (i < left.length) a[k++] = left[i++];
            while (j < right.length) a[k++] = right[j++];
        }

        static void sort(int[] a, int l, int r) {
            if (l < r) {
                int m = (l + r) / 2;
                sort(a, l, m);
                sort(a, m + 1, r);
                merge(a, l, m, r);
            }
        }

        public static void main(String[] args) {
            int[] a = {12, 11, 13, 5, 6, 7};
            sort(a, 0, a.length - 1);
            for (int x : a) System.out.print(x + " ");
        }
}
